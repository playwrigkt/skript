buildscript {
  //main
  ext.java_version = 1.8
  ext.kotlin_version = '1.2.50'
  ext.arrow_version = '0.7.2'
  ext.slf4j_version = '1.7.25'
  ext.jackson_version = '2.9.+'

  //test
  ext.kotlin_test_version="3.1.6"
  ext.junit_platform_version = "5.1.0"

  //build
  ext.dokka_version = "0.9.16"
  ext.shipkit_version = "2.0.25"

  //implementation
  ext.kotlin_coroutine_version = '0.23.3'
  ext.vertxVersion = '3.4.2'
  ext.ktor_version = '0.9.3-alpha-5'
  ext.hikari_version = '2.7.1'
  ext.postgres_version = '42.1.4'

  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    classpath "org.shipkit:shipkit:$shipkit_version"
  }
}

apply plugin: "org.shipkit.java"


subprojects {
  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'org.junit.platform.gradle.plugin'
  apply plugin: "jacoco"
  apply plugin: 'org.jetbrains.dokka'

  group = "playwrigkt.skript"

  archivesBaseName = "skript${project.path.replace(":", "-")}"

  repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
  }

  sourceCompatibility = java_version
  targetCompatibility = java_version

  compileKotlin {
    kotlinOptions.jvmTarget= "$targetCompatibility"
  }

  compileTestKotlin {
    kotlinOptions.jvmTarget = "$targetCompatibility"
  }

  dependencies {
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "io.arrow-kt:arrow-core:$arrow_version"
    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_platform_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_platform_version"
    testCompile "io.kotlintest:kotlintest-core:$kotlin_test_version"
    testCompile "io.kotlintest:kotlintest-assertions:$kotlin_test_version"
    testCompile "io.kotlintest:kotlintest-runner-junit5:$kotlin_test_version"
    testCompile "org.slf4j:slf4j-simple:$slf4j_version"
  }

  junitPlatform { }

  jacoco {
    applyTo junitPlatformTest
  }

  task junitPlatformCoverageReport(type:JacocoReport){
      executionData junitPlatformTest
      sourceSets sourceSets.main
      reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
      }
  }

  junitPlatformCoverageReport.dependsOn junitPlatformTest
  build.dependsOn junitPlatformCoverageReport

  releaseNeeded {
    skipComparePublications = System.getenv("FORCE_PUBLISH") != null ? true : false
  }

  dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/docs/dokka-html"
    moduleName = archivesBaseName
  }

  task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/docs/javadoc/$archivesBaseName"
  }

  javadoc {
    destinationDir = file("$buildDir/docs")
  }

  javadoc.dependsOn dokka
  javadoc.dependsOn dokkaJavadoc
  dokka.dependsOn test
  dokkaJavadoc.dependsOn test
}
